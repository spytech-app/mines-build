{"version":3,"sources":["assets/bomb.png","assets/diamond.png","assets/disabled.png","assets/logo.png","assets/background.png","components/Board/styles.js","components/Board/index.js","pages/Home/styles.js","pages/Home/index.js","utils/numbers.js","routes/index.js","styles/global.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Table","styled","table","_templateObject","_taggedTemplateLiteral","TableBody","tbody","_templateObject2","TableRow","tr","_templateObject3","TableCeil","td","_templateObject4","Card","div","_templateObject5","DisabledImage","img","attrs","src","disabled","alt","_templateObject6","BombImage","bomb","_templateObject7","DiamondImage","diamond","_templateObject8","Board","_ref","matrix","React","createElement","map","row","rowIndex","key","cell","colIndex","Container","background","Logo","logo","PrimaryButton","button","SecondaryButton","Home","_useState","useState","index","_useState2","_slicedToArray","gameBoard","setGameBoard","useEffect","board","Array","from","length","handleGenerateGame","useCallback","diamonds","min","max","numbers","idx","push","i","j","Math","floor","random","temp","slice","getRandomNumbersInRange","_","idxR","__","idxC","includes","handleAccessPlatform","window","location","href","onClick","Routes","Switch","Route","path","component","createGlobalStyle","App","Fragment","GlobalStyle","Router","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b3417ed0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bomb.60e802b3.png\";","module.exports = __webpack_public_path__ + \"static/media/diamond.18a5a7fd.png\";","module.exports = __webpack_public_path__ + \"static/media/disabled.914a52f5.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.914a52f5.png\";","module.exports = __webpack_public_path__ + \"static/media/background.a90dfb39.png\";","import styled from 'styled-components';\nimport bomb from '../../assets/bomb.png';\nimport diamond from '../../assets/diamond.png';\nimport disabled from '../../assets/disabled.png';\n\nconst cardSize = '55px';\n\nexport const Table = styled.table`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  border-spacing: 10px;\n`;\n\nexport const TableBody = styled.tbody``;\n\nexport const TableRow = styled.tr``;\n\nexport const TableCeil = styled.td``;\n\nexport const Card = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  background: #2e52d3;\n  border-radius: 10px;\n\n  width: ${cardSize};\n  height: ${cardSize};\n`;\n\nexport const DisabledImage = styled.img.attrs({\n  src: disabled,\n  alt: 'disabled',\n})`\n  width: ${cardSize};\n  height: ${cardSize};\n`;\n\nexport const BombImage = styled.img.attrs({\n  src: bomb,\n  alt: 'bomb',\n})`\n  width: ${cardSize};\n  height: ${cardSize};\n`;\n\nexport const DiamondImage = styled.img.attrs({\n  src: diamond,\n  alt: 'diamond',\n})`\n  width: ${cardSize};\n  height: ${cardSize};\n`;\n","import React from 'react';\n\n// styles\nimport {\n  Table,\n  TableBody,\n  TableRow,\n  TableCeil,\n  Card,\n  BombImage,\n  DiamondImage,\n  DisabledImage,\n} from './styles';\n\nconst Board = ({ matrix }) => {\n  return (\n    <div>\n      <Table>\n        <TableBody>\n          {matrix &&\n            matrix.map((row, rowIndex) => (\n              <TableRow key={rowIndex}>\n                {row.map((cell, colIndex) => (\n                  <TableCeil key={colIndex}>\n                    <Card>\n                      {cell.disabled ? (\n                        <DisabledImage />\n                      ) : cell.diamond ? (\n                        <DiamondImage />\n                      ) : (\n                        <BombImage />\n                      )}\n                    </Card>\n                  </TableCeil>\n                ))}\n              </TableRow>\n            ))}\n        </TableBody>\n      </Table>\n    </div>\n  );\n};\n\nexport default Board;\n","import styled from 'styled-components';\nimport logo from '../../assets/logo.png';\nimport background from '../../assets/background.png';\n\nexport const Container = styled.div`\n  width: 100%;\n  height: 100%;\n\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n\n  background-size: cover;\n  background-position: center center;\n  background-repeat: no-repeat;\n\n  background-image: url(${background});\n`;\n\nexport const Logo = styled.img.attrs({\n  src: logo,\n})`\n  margin: 50px 0;\n  width: 200px;\n`;\n\nexport const PrimaryButton = styled.button`\n  margin-top: 50px;\n  margin-bottom: 10px;\n\n  font-family: 'Poppins', sans-serif;\n  font-size: 16px;\n  font-weight: 600;\n\n  width: 180px;\n  height: 50px;\n\n  border: none;\n  border-radius: 10px;\n\n  color: #fff;\n  background: linear-gradient(to right, #e78b2d 0%, #dd4912 100%);\n\n  transition: opacity 0.2s;\n\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nexport const SecondaryButton = styled.button`\n  margin-top: 10px;\n  margin-bottom: 50px;\n\n  font-family: 'Poppins', sans-serif;\n  font-size: 12px;\n  font-weight: 600;\n\n  width: 150px;\n  height: 40px;\n\n  border: none;\n  border-radius: 10px;\n\n  color: #fff;\n  background: linear-gradient(to right, #0e225f 0%, #0e225f 100%);\n\n  transition: opacity 0.2s;\n\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport Board from '../../components/Board';\n\n// components\nimport { getRandomNumbersInRange } from '../../utils/numbers';\n// styles\nimport { Container, Logo, SecondaryButton, PrimaryButton } from './styles';\n\nconst Home = () => {\n  const [gameBoard, setGameBoard] = useState([[{ index: 0, diamond: false }]]);\n\n  useEffect(() => {\n    const board = Array.from({ length: 5 }, () =>\n      Array.from({ length: 5 }, () => {\n        return {\n          disabled: true,\n        };\n      }),\n    );\n\n    setGameBoard(board);\n  }, []);\n\n  const handleGenerateGame = useCallback(() => {\n    const diamonds = getRandomNumbersInRange(1, 25);\n\n    const board = Array.from({ length: 5 }, (_, idxR) =>\n      Array.from({ length: 5 }, (__, idxC) => {\n        const index = idxC + 1 + idxR * 5;\n\n        return {\n          index: idxC + 1 + idxR * 5,\n          diamond: diamonds.includes(index),\n        };\n      }),\n    );\n\n    setGameBoard(board);\n  }, []);\n\n  const handleAccessPlatform = useCallback(() => {\n    window.location.href = 'https://google.com.br';\n  }, []);\n\n  return (\n    <Container>\n      <Logo></Logo>\n\n      <Board matrix={gameBoard} />\n\n      <PrimaryButton onClick={handleGenerateGame}>Gerar HACK</PrimaryButton>\n      <SecondaryButton onClick={handleAccessPlatform}>\n        Acessar Plataforma\n      </SecondaryButton>\n    </Container>\n  );\n};\n\nexport default Home;\n","export function getRandomNumbersInRange(min, max) {\n  // Create an array to store the numbers in the range\n  var numbers = [];\n  for (var idx = min; idx <= max; idx++) {\n    numbers.push(idx);\n  }\n\n  // Shuffle the array using Fisher-Yates shuffle algorithm\n  for (var i = numbers.length - 1; i > 0; i--) {\n    var j = Math.floor(Math.random() * (i + 1));\n    var temp = numbers[i];\n    numbers[i] = numbers[j];\n    numbers[j] = temp;\n  }\n\n  // Return the first 4 numbers from the shuffled array\n  return numbers.slice(0, 4);\n}\n","import React from 'react';\n\nimport { Switch, Route } from 'react-router-dom';\n\nimport Home from '../pages/Home';\n\nconst Routes = () => (\n  <Switch>\n    <Route path=\"/\" component={Home} />\n  </Switch>\n);\n\nexport default Routes;\n","import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    outline: 0;\n    box-sizing: border-box;\n  }\n  #root{\n    width: 100vw;\n    height: 100vh;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n  body {\n    width: 100vw;\n    height: 100vh;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: #282c34;\n    color: #fff;\n    -webkit-font-smoothing: antialiased\n  }\n  body, input, button {\n    font: 1rem 'Roboto', sans-serif;\n  }\n  button {\n    cursor: pointer;\n  }\n  a{\n    text-decoration: none;\n  }\n`;\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport Routes from './routes';\n\nimport GlobalStyle from './styles/global';\n\nconst App = () => (\n  <>\n    <GlobalStyle />\n    <Router>\n      <Routes />\n    </Router>\n  </>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import './styles/form.scss';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}